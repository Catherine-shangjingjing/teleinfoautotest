# NOTE: Generated By HttpRunner v3.1.6
# FROM: testcases/prefixAlloc/ent-prefix-alloc-pageQuery-2.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseEntPrefixAllocPagequery2(HttpRunner):

    config = (
        Config("前缀分配分页-查询是否包含新分配的前缀")
        .base_url("${ENV(HOST)}")
        .verify(False)
        .export(*["userId", "orgName"])
    )

    teststeps = [
        Step(
            RunRequest("前缀分配分页-查询是否包含新分配的前缀")
            .get("/api/v3/ent/prefix/alloc/pageQuery")
            .with_params(
                **{
                    "currentPage": "1",
                    "order": "",
                    "orderProp": "",
                    "orgName": "$orgName",
                }
            )
            .with_headers(
                **{
                    "Accept": "application/json, text/plain, */*",
                    "Accept-Encoding": "gzip, deflate",
                    "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6",
                    "Connection": "keep-alive",
                    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36 Edg/98.0.1108.56",
                }
            )
            .with_cookies(**{"SESSION": "$adminSession"})
            .extract()
            .with_jmespath("body.data.content[0].userId", "userId")
            .with_jmespath("body.data.content[0].orgName", "orgName")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.message", "success")
            .assert_equal("body.status", 1)
            .assert_equal(
                "body.data.content[0].entPrefix",
                "${get_join_str($prefix, $pendingPrefixCondition)}",
            )
        ),
    ]


if __name__ == "__main__":
    TestCaseEntPrefixAllocPagequery2().test_start()
